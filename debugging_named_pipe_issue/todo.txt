After GetParameterAsync called, the ProxyDevice is disposed but cannot reconnect on Linux. On windows machine reconnection works.

On windows:
After GetParameterAsync ProxyDevice is disposed by sending FINISH via pipe.
When parameters are set and the measurement is started, first process and pipes are disposed and recreated.
Connection is successfully and measruement terminates as expected.


On linux:
Pipes are created and connection established.
Pipes and process are disposed after parameters are sent.
Measurement starts and pipes and process are created
Plattform helper cleans up the pipes and then program tells us that pipes are created successfully.. seems weird -> SOLUTION: clean up deleted pipes. uncommented the File.Delete(pipename) in PlatformHelper.cs which solved the problem. Is clean up required or was it implemented wrong.

Other issue: The Finish Command is sent twice. On first call, the device already shuts down. on the second call it is already gone and throws an error.

Maybe do a clean up when measurement is finished. According to internet, the program should clean up the pipes on startup because:

To address this, applications on Linux should explicitly delete the socket file before attempting to bind, typically using File.Delete(socketPath) or unlink() in the application's startup routine. This ensures a clean state regardless of how the previous instance terminated.

/tmp/CoreFxPipe_serverToClient_0b631885-86a

